datasource DS {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model List {
  id          Int        @id @default(autoincrement())
  isPublic    Boolean    @default(false)
  title       String
  description String
  category    String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  userLists   UserList[]
  listItems   ListItem[]
  listOwner   ListOwner?
}

model ListOwner {
  ownerIdentifier String
  listId          Int
  list            List   @relation(fields: [listId], references: [id])

  @@id([ownerIdentifier, listId])
}

model UserList {
  id             Int            @id @default(autoincrement())
  listId         Int
  userIdentifier String
  list           List           @relation(fields: [listId], references: [id])
  userListItems  UserListItem[]
}

model ListItem {
  id            Int            @id @default(autoincrement())
  listId        Int
  isbn          String
  ordinal       Int
  list          List           @relation(fields: [listId], references: [id])
  userListItems UserListItem[]

  @@unique([listId, isbn])
  @@unique([listId, ordinal])
}

model UserListItem {
  id             Int           @id @default(autoincrement())
  userIdentifier String
  listItemId     Int
  userListId     Int
  status         ReadingStatus @default(NOT_STARTED)
  owned          Boolean       @default(false)
  listItem       ListItem      @relation(fields: [listItemId], references: [id])
  userList       UserList      @relation(fields: [userListId], references: [id])
}

enum ReadingStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}
